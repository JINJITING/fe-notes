(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{381:function(t,r,e){"use strict";e.r(r);var a=e(44),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/HTTP",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("HTTP（Hyper Text Transfer Protocol，超文本传输协议），是用传输超文本的应用层协议。遵循 C/S 模型，一种无状态的、应用层的、以请求/应答方式运行的协议。")]),t._v(" "),e("ul",[e("li",[t._v("协议：使用计算机能够理解的语言确立了一种计算机之间交流通信的规范，以及相关的各种控制和错误处理方式。")]),t._v(" "),e("li",[t._v("传输：HTTP 协议是一个“双向协议”，数据传输过程中允许有“中间人”")]),t._v(" "),e("li",[t._v("超文本：是文字、图片、音频和视频等的混合体，最关键的是含有“超链接”。")]),t._v(" "),e("li",[t._v("无状态：(https://www.cnblogs.com/bellkosmos/p/5237146.html)当浏览器发送请求给服务器的时候，服务器响应，但是同一个浏览器再发送请求给服务器的时候，他会响应，但是他不知道你就是刚才那个浏览器，简单地说，就是服务器不会去记得你，所以是无状态。")])]),t._v(" "),e("h2",{attrs:{id:"基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础知识"}},[t._v("#")]),t._v(" 基础知识")]),t._v(" "),e("ul",[e("li",[e("RouterLink",{attrs:{to:"/base/np/http/protocol-format.html"}},[t._v("HTTP 协议格式")])],1)]),t._v(" "),e("h2",{attrs:{id:"http2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http2"}},[t._v("#")]),t._v(" "),e("a",{attrs:{href:"https://http2.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP2"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("HTTP2 源自 SPDY2，与 SPDY2 不同的主要有：")]),t._v(" "),e("ol",[e("li",[t._v("HTTP2 支持明文 HTTP 传输，而 SPDY 强制使用 HTTPS")]),t._v(" "),e("li",[t._v("HTTP2 消息头的压缩算法采用 "),e("a",{attrs:{href:"https://tools.ietf.org/html/rfc7541",target:"_blank",rel:"noopener noreferrer"}},[t._v("HPACK"),e("OutboundLink")],1),t._v("，而 SPDY 使用 DELETE")])]),t._v(" "),e("h3",{attrs:{id:"http-2-与-http-1-1-的差别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-2-与-http-1-1-的差别"}},[t._v("#")]),t._v(" HTTP/2 与 HTTP/1.1 的差别")]),t._v(" "),e("ul",[e("li",[t._v("HTTP/2 是二进制协议，不再是文本协议；")]),t._v(" "),e("li",[t._v("可发起多个请求，并行的请求能在同一个链接中处理，废弃了 HTTP/1.1 里的管道；")]),t._v(" "),e("li",[t._v("压缩了 headers，使用专用算法压缩头部，减少数据传输量；")]),t._v(" "),e("li",[t._v("允许服务器在客户端缓存中填充数据，通过一个叫服务器推送的机制来提前请求；")]),t._v(" "),e("li",[t._v("增强了安全性，“事实上”要求加密通信。")])]),t._v(" "),e("h2",{attrs:{id:"https"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#https"}},[t._v("#")]),t._v(" HTTPS")]),t._v(" "),e("p",[t._v("默认端口 443，\n把 HTTP 下层的传输协议由 TCP/IP 换成了 SSL/TLS，由“HTTP over TCP/IP”变成了“HTTP over SSL/TLS”，让 HTTP 运行在了安全的 SSL/TLS 协议上。\n收发报文不再使用 Socket API，而是调用专门的安全接口。")]),t._v(" "),e("h3",{attrs:{id:"ssl-tls"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls"}},[t._v("#")]),t._v(" SSL/TLS")]),t._v(" "),e("p",[t._v("TLS 由记录协议、握手协议、警告协议、变更密码规范协议、扩展协议等几个子协议组成，综合使用了对称加密、非对称加密、身份认证等许多密码学前沿技术。")]),t._v(" "),e("h4",{attrs:{id:"参考文档"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考文档"}},[t._v("#")]),t._v(" 参考文档")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://tools.ietf.org/html/rfc2068",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP/1.1"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=s.exports}}]);